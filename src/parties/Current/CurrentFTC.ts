import { Household } from "../../household/Household";

export class CurrentFTC {
    private data = {
        42700: [113, 204, 295, 386, 478, 569],
        44000: [106, 198, 2289, 386, 478, 569],
        45500: [99, 190, 282, 386, 478, 569],
        47000: [92, 183, 274, 386, 478, 569],
        48500: [85, 176, 267, 0, 0, 0],
        50000: [77, 169, 260, 0, 0, 0],
        51500: [70, 161, 253, 0, 0, 0],
        53000: [63, 154, 246, 0, 0, 0],
        54500: [56, 147, 238, 0, 0, 0],
        56000: [49, 140, 231, 0, 0, 0],
        57500: [41, 133, 224, 0, 0, 0],
        59000: [34, 125, 217, 0, 0, 0],
        60500: [27, 118, 209, 0, 0, 0],
        62000: [20, 111, 202, 0, 0, 0],
        63500: [13, 104, 195, 0, 0, 0],
        65000: [5, 97, 188, 0, 0, 0],
        66500: [0, 89, 181, 0, 0, 0],
        68000: [0, 82, 173, 0, 0, 0],
        69500: [0, 75, 166, 0, 0, 0],
        71000: [0, 68, 159, 0, 0, 0],
        72500: [0, 61, 152, 0, 0, 0],
        74000: [0, 53, 145, 0, 0, 0],
        75500: [0, 46, 137, 0, 0, 0],
        77000: [0, 39, 130, 0, 0, 0],
        78500: [0, 32, 123, 0, 0, 0],
        80000: [0, 24, 116, 0, 0, 0],
        81500: [0, 17, 109, 0, 0, 0],
        83000: [0, 10, 101, 0, 0, 0],
        84500: [0, 3, 94, 0, 0, 0],
        86000: [0, 0, 87, 0, 0, 0],
        87500: [0, 0, 80, 0, 0, 0],
        89000: [0, 0, 72, 0, 0, 0],
        90500: [0, 0, 65, 0, 0, 0],
        92000: [0, 0, 58, 0, 0, 0],
        93500: [0, 0, 51, 0, 0, 0],
        95000: [0, 0, 44, 0, 0, 0],
        96500: [0, 0, 36, 0, 0, 0],
        98000: [0, 0, 29, 0, 0, 0],
        99500: [0, 0, 22, 0, 0, 0],
        110000: [0, 0, 15, 0, 0, 0],
        111500: [0, 0, 8, 0, 0, 0],
        113000: [0, 0, 0, 0, 0, 0],
        114500: [0, 0, 0, 0, 0, 0],
        116000: [0, 0, 0, 0, 0, 0],
        117500: [0, 0, 0, 0, 0, 0],
        119000: [0, 0, 0, 0, 0, 0],
        120500: [0, 0, 0, 0, 0, 0],
    }
    
    public calculate(household: Household): number {
        const children = household.people.filter(p => p.age < 18).length;

        let lastValue = [0, 0, 0, 0, 0, 0];
        for (let key of Object.keys(this.data).map(Number).sort((a, b) => a < b? -1 : a = b? 0 : 1)) {
            if (household.income <= key) {
                return lastValue[children];
            }
            lastValue = this.data[key];
        }
        
        return 0;
    }
}